2/17 # 강의 1



*항상 why를 생각 > how 이후 어떻게를 알자 
**프로젝트 주제짤 때 있는거 말고 좀 미래를 보자 (IOTA)
 
*환경구축
1. SDK-도구 > JDK
2. IDE-GUI > ECLIPSE <>CUI(문자기반) > CLI(콘솔환경. 윈도우에선 cmd 리눅스에선 shell)

윈10이면 chocolatey sw 사용하면 되는데 우린 윈7이라서 zulu사용

*java -version 
jre(java run time)
javac(compiler) < sdk중 하나로 source file 읽어서 run할 수 있는 걸로 바꿈
______
javac > 실행시킬 수 있게 컴파일 하는 것
java > 실행시키는 것
___
build time > 문법오류
run time > 어디서 오류났는지 모르는 오류 > 그래서 debugger를 사용

*설치시
1. path
2. version (특히 java는 신경써야함) 
jdk와 ide 버전이 호환되어야한다 


___LINUX
*wsl > 윈에서 리눅스 실행시킬 때 
가상머신 사용할 때 window 기능켜기/끄기에서 켠뒤에 사용한다. (docker, virtual box)

*zulu
java로 만들 때 JDK
만든 것을 실행시킬 때 JRE (보통은 JDK안에 JRE 포함됨)

__
*Java는 과연 os독립적인가...
우리가 다운로드 할 때 운영체제 선택한거 기억나지?
그런거 생각하면 실질적으로 독립은 아니다. 

JAVA APP 
JVM 
OS

의 구조로 JVM을 통해서 실행되어서 그렇게 보이는 것(??)

*다시 한 번 더 설치할 때..
1. 운영체제 확인 > 빌드버전이나 다른거 버전이나 등등..
2. JAVA (JDK, IDE) 
3. 경로설정 JAVA_HOME >환경변수 설정 잘하기!

*환경변수 설정
1. JAVA_HOME > bin폴더 전의 위치까지만 넣자. 다른 lib들이 있으니까.
2. Path (%JAVA_HOME%\bin)


_________

*비트 수가 커질 수록 표현할 수 있는 범위가 커짐

____Eclipse 
SSH > 컴퓨터 간 REMOTE
-꼼수 : 버전 안맞으면 eclipse.ini 파일가서 JDK 경로 적기(급할 때)
>근데 어지간하면 다시깔기..

Java-installed JRES에서 JDK가 여러개 있으면 맞는걸로 골라씀
_______
**컴퓨터는 수체계!

*encoding과 decoding의 중요성을 생각하자. 

***bit/byte 외우기!

시스템은 입력-처리-출력의 형태이다. 
1) bit/byte 단위로 봐라 
2) 시스템관점으로 봐라(셋 중 하나만이라도 된다)

최소의 단위가 연산자이고 연산자의 입력/처리/출력의 작업이 모여 함수가 되고 함수들이 모여 프로젝트가 된다. 

**주소는 1byte 단위로 나뉘어진다. 
메모리에서 주소를 읽고 쓸 때 위치와 크기가 필요하다. 
자료형/데이터 타입은 그 중에서 크기를 알려준다. 

**참조한다 > . 으로 표현한다. 이는 한 스텝을 넘어간다는 뜻이다. 

1)stack : 생겼다 사라졌다를 자동으로 한다. (일시적)
2)heap : 쓰면 쓴다고 명시를 해야한다 (수동) > NEW라고 명시한다 (JAVA는 대부분 HEAP)

**내가 컴퓨터라고 생각하고 눈에 보이는 몯느 것을 추상화해보자


**숫자와 수는 다르다. 
1. 아스키코드 문자1 > 1byte (주로 통신에 사용)
2. 유니코드 문자1 > 2 byte 이상 (기본)
3. Java > 2byte 

ex) KOREA
-아스키코드 문자 : 5bytes
-유니코드 문자 : 10bytes


